
import deterministic_fw_wls as fair_workloads

COLS = 5
NAME = "amf_workloads.tex"

printStart = 40
printEnd = 45

print "Generating table for workloads "+str(fair_workloads.workloads.keys()[printStart])+" to "+str(fair_workloads.workloads.keys()[printEnd-1])

header = """
\\begin{table}[t]

% Autogenerated workloadfile, do not edit!

\\caption{Randomly Generated Multiprogrammed Workloads}
\\label{tab:fairWorkloads}
"""

footer= """
\\end{tabularx}
\\end{table}
"""

outfile = open(NAME, 'w')
outfile.write(header)

outfile.write("\\begin{tabularx}{\\textwidth}{")
for i in range(COLS):
    outfile.write("|>{\\scriptsize}l>{\\scriptsize\\raggedright}X")
outfile.write("|}\n")

outfile.write("\\hline\n")
for i in range(COLS-1):
    outfile.write("\\textbf{ID} & \\textbf{Benchmarks} &")
outfile.write("\\textbf{ID} & \\textbf{Benchmarks} \\tabularnewline")
outfile.write("\\hline\n")

bms_per_row = len(fair_workloads.workloads.keys()[printStart:printEnd]) / COLS
rowdata = {}

for num in fair_workloads.workloads.keys()[printStart:printEnd]:
    wl = fair_workloads.workloads[num][0]
    rowindex = (num-1) % bms_per_row
    if rowindex not in rowdata:
        rowdata[rowindex] = []
    rowdata[rowindex].append((num, wl))


for rowindex in rowdata:
    row = rowdata[rowindex]
    cnt = 0
    for id, bms in row:
        name = str(id)
        outfile.write(name)

        outfile.write(" & ")
        outfile.write(bms[0])
        for bm in bms[1:]:
            outfile.write(", "+bm)
                
        if cnt != len(row)-1:
            outfile.write(" & \n")
        cnt = cnt + 1
    outfile.write("\n\\tabularnewline\n")
    outfile.write("\\hline\n")

outfile.write(footer)
outfile.flush()
outfile.close()

